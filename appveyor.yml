environment:

  global:
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_compiler.cmd"

  matrix:

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - git submodule update --init
  - set DOTNET_CLI_TELEMETRY_OPTOUT=1

build: off

before_build:
  - cmd: dotnet --version

before_test:
  - cd machinelearning
  - cmd /C build.cmd -Debug
  - cmd /C build.cmd -Release
  - cd ..
  - mkdir machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.Api\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.Ensemble\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.FastTree\netstandard2.0\*.dll machinelearning\dist\Release
  # - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.InternalStreams\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.KMeansClustering\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.Maml\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.LightGBM\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.Onnx\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.PCA\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\AnyCPU.Release\Microsoft.ML.StandardLearners\netstandard2.0\*.dll machinelearning\dist\Release
  - copy machinelearning\bin\x64.Release\Native\*.dll machinelearning\dist\Release
  - mkdir machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.Api\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.Ensemble\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.FastTree\netstandard2.0\*.dll machinelearning\dist\Debug
  # - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.InternalStreams\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.KMeansClustering\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.Maml\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.LightGBM\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.Onnx\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.PCA\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\AnyCPU.Debug\Microsoft.ML.StandardLearners\netstandard2.0\*.dll machinelearning\dist\Debug
  - copy machinelearning\bin\x64.Debug\Native\*.dll machinelearning\dist\Debug
  - cd machinelearningext
  - cmd /C dotnet build -c Debug
  - cmd /C dotnet build -c Release
  - cd ..
  
test_script:
  # unit tests for machinelearning (too long)
  # - cd machinelearning
  # - cmd /C build.cmd -runTests -Release
  # - cd ..
  # unit tests for machinelearningext
  - cd machinelearningext
  - cmd /C dotnet test -c Debug TestMachineLearningExt -v n
  - cmd /C dotnet test -c Release TestMachineLearningExt -v n
  - cd ..

after_test:
  - if not exist dist mkdir dist
  - if not exist dist\Release mkdir dist\Release
  - if not exist dist\Debug mkdir dist\Debug
  - python -u copy_binaries.py Release dist\Release
  - python -u copy_binaries.py Debug dist\Debug

artifacts:
  - path: dist
    name: machinelearningext
