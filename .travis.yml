dist: trusty
sudo: false
language: python
git:
  submodules: true
  
matrix:
  include:
    - python: 3.6
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
    - PYTHONUNBUFFERED=True
    - DOTNET_CLI_TELEMETRY_OPTOUT=1

addons:
  apt:
    packages:
      - clang
      - cmake
      - libunwind8
      - curl
      # ubuntu https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore2x#ubuntu
      - liblttng-ust0
      - libcurl3
      - libssl1.0.0
      - libuuid1
      - libkrb5-3
      - zlib1g
      - libicu52

before_install:
  # Set-up dll path for embedded tests
  - PY_LIBDIR=$(python -c 'import sysconfig; print(sysconfig.get_config_var("LIBDIR"))')
  - export LD_LIBRARY_PATH=$PY_LIBDIR:$LD_LIBRARY_PATH
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1
  # Addition to pythonnet build
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -qq g++-5 --allow-unauthenticated
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 90
  # dotnet
  - wget -q https://packages.microsoft.com/config/ubuntu/14.04/packages-microsoft-prod.deb
  - sudo dpkg -i packages-microsoft-prod.deb
  - sudo apt-get install apt-transport-https
  - sudo apt-get update
  - sudo apt-get install dotnet-sdk-2.1

before_script:
  - sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-5 /usr/bin/gcc
  # machinelearning
  - cd machinelearning
  - bash build.sh -Release
  - bash build.sh -Debug
  # machinelearning publish
  - bash -c "dotnet publish Microsoft.ML.sln -o ../../dist/Debug -c Debug --self-contained" || true
  - bash -c "dotnet publish Microsoft.ML.sln -o ../../dist/Release -c Release --self-contained" || true
  - cd ..
  # machinelearning copy
  - cp machinelearning/bin/x64.Debug/Native/*.so machinelearning/dist/Debug
  - cp machinelearning/bin/x64.Release/Native/*.so machinelearning/dist/Release
  # machinelearningext
  - cd machinelearningext
  - dotnet build -c Debug
  - dotnet build -c Release
  - cd ..

script:
  # unit tests for machinelearning: too long
  #- cd machinelearning
  #- bash build.sh -runTests -Release
  #- cd ..
  # unit tests for machinelearningext
  - cd machinelearningext
  - dotnet test -c Debug TestMachineLearningExt -v n
  - dotnet test -c Release TestMachineLearningExt -v n
  - cd ..
