
language: python

python:
  - { PATH: "{{Python37}}", VERSION: 3.7, DIST: std, PYINT: python3.7 }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("$NAME_JENKINS", project_name + "_$VERSION_$DIST_$NAME"), "_venv")}}
  
install:
  - git submodule update --init
  - $PYINT -c "from pip._internal import main;main(\"install --no-cache-dir --no-deps --index http://localhost:8067/simple/ jyquickhelper pyquickhelper csharpy --extra-index-url=https://pypi.python.org/simple/\".split())"
  - $PYINT -c "from pip._internal import main;main(\"install -r requirements.txt\".split())"
  - $PYINT --version
  - $PYINT -c "from pip._internal import main;main([\"freeze\"])"
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1
  # Build machinelearning
  - cd machinelearning
  - bash build.sh -Debug
  - bash build.sh -Release
  - cd ..
  # Copy binaries
  - cd machinelearning
  - bash -c "dotnet publish Microsoft.ML.sln -o ../../dist/Debug -c Debug --self-contained" || true
  - bash -c "dotnet publish Microsoft.ML.sln -o ../../dist/Release -c Release --self-contained" || true
  - cd ..
  - cp machinelearning/bin/x64.Debug/Native/*.so machinelearning/dist/Debug
  - cp machinelearning/bin/x64.Release/Native/*.so machinelearning/dist/Release
  # Build machinelearningext
  - cd machinelearningext
  - dotnet build -c Debug
  - dotnet build -c Release
  - cd ..

script:
  - { CMD: "cd machinelearningext;dotnet test -c Debug TestMachineLearningExt -v n;dotnet test -c Release TestMachineLearningExt -v n;cd ..", NAME: "UT_CSHARP" }

documentation:
  - if [ ${NAME} == "UT" ] then $PYINT -c "from sphinx import build_main;build_main(['-j2','-v','-T','-b','html','-d','docs/doctrees','docs/source','docs/build'])" fi
  - if [ ${NAME} == "UT" ] then cp -R -f docs/build/html dist/html fi
